android fragment的两种创建方式
1：在布局xml文件中配置
    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        android:orientation="horizontal"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent">

        <fragment android:name="com.example.android.fragments.HeadlinesFragment"
                  android:id="@+id/headlines_fragment"
                  android:layout_weight="1"
                  android:layout_width="0dp"
                  android:layout_height="match_parent" />

        <fragment android:name="com.example.android.fragments.ArticleFragment"
                  android:id="@+id/article_fragment"
                  android:layout_weight="2"
                  android:layout_width="0dp"
                  android:layout_height="match_parent" />

    </LinearLayout>
    2：在代码中动态创建
    import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
public class Main2Activity extends AppCompatActivity {
    //声明本次使用到的java类
    FragmentManager fragmentManager;
    FragmentTransaction fragmentTransaction;
    RightFragment rightFragment;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);
        /*在activity对应java类中通过getFragmentManager()
        *获得FragmentManager，用于管理ViewGrop中的fragment
        * */
        fragmentManager=getFragmentManager();
        /*FragmentManager要管理fragment（添加，替换以及其他的执行动作）
        *的一系列的事务变化，需要通过fragmentTransaction来操作执行
         */
        fragmentTransaction = fragmentManager.beginTransaction();
        //实例化要管理的fragment
        rightFragment = new RightFragment();
        //通过添加（事务处理的方式）将fragment加到对应的布局中
        fragmentTransaction.add(R.id.right,rightFragment);
        //事务处理完需要提交
        fragmentTransaction.commit();
    }
}
